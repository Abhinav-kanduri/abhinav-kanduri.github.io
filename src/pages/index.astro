---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';
import BlogCard from '../components/BlogCard.astro';
import Newsletter from '../components/Newsletter.astro';
import TagList from '../components/TagList.astro';
import Welcome from '../components/Welcome.astro';
import ThemeToggle from '../components/ThemeToggle.astro';
import SearchBar from '../components/SearchBar.astro';

// Import all content
const tutorials = import.meta.glob('./tutorials/*.md', { eager: true });
const architectures = import.meta.glob('./architecture/*.md', { eager: true });
const InterviewBytes = import.meta.glob('./InterviewBytes/*.md', { eager: true });
const cases = import.meta.glob('./case-studies/*.md', { eager: true });

// Normalize posts
function flattenPosts(mods, category) {
  return Object.entries(mods).map(([path, mod]) => {
    const slug = path.split('/').pop().replace(/\.md$/, '');
    const fm = mod.frontmatter;
    return {
      slug,
      data: {
        title: fm.title,
        description: fm.description,
        publishDate: new Date(fm.pubDate),
        heroImage: fm.heroImage,
        tags: fm.tags,
        author: fm.author,
      },
      category
    };
  });
}

let allPosts = [
  ...flattenPosts(tutorials, 'tutorials'),
  ...flattenPosts(architectures, 'architecture'),
  ...flattenPosts(InterviewBytes, 'InterviewBytes'),
  ...flattenPosts(cases, 'case-studies'),
];

// Sort and filter posts
allPosts.sort((a, b) => b.data.publishDate - a.data.publishDate);
const featuredPosts = allPosts.slice(0, 2);
const recentPosts = allPosts.slice(2, 6);
const popularTags = Array.from(new Set(allPosts.flatMap(p => p.data.tags)));

// Enhanced skills data with categories
const skillCategories = [
  {
    name: "Foundation AI & LLMs",
    skills: [
      { name: "AI/ML Fundamentals", level: 95, tools: ["PyTorch", "TensorFlow", "Scikit-learn"] },
      { name: "Transformer Architectures", level: 90, tools: ["BERT", "GPT", "T5"] },
      { name: "Prompt Engineering", level: 92, tools: ["Chain-of-Thought", "Few-shot Learning"] }
    ]
  },
  {
    name: "Advanced Language Systems",
    skills: [
      { name: "LLM Strategy", level: 88, tools: ["Fine-tuning", "RLHF", "Parameter-Efficient"] },
      { name: "RAG Systems", level: 85, tools: ["Vector DBs", "Embeddings", "Hybrid Search"] },
      { name: "Embedding Pipelines", level: 87, tools: ["Sentence Transformers", "Custom Embeddings"] }
    ]
  },
  {
    name: "Agentic Orchestration",
    skills: [
      { name: "Agent Frameworks", level: 86, tools: ["LangChain", "AutoGen", "Semantic Kernel"] },
      { name: "Custom Workflows", level: 84, tools: ["Task Planning", "Memory Management"] },
      { name: "Orchestration Patterns", level: 85, tools: ["State Machines", "Event-Driven"] }
    ]
  },
  {
    name: "Data Engineering & ETL",
    skills: [
      { name: "ETL Pipelines", level: 90, tools: ["Apache Beam", "Airflow", "dbt"] },
      { name: "Data Modeling", level: 88, tools: ["Dimensional", "Data Vault", "Star Schema"] },
      { name: "Streaming Systems", level: 85, tools: ["Kafka", "Flink", "Spark Streaming"] }
    ]
  },
  {
    name: "Cloud & MLOps",
    skills: [
      { name: "Cloud Architecture", level: 92, tools: ["AWS", "GCP", "Azure"] },
      { name: "MLOps", level: 88, tools: ["MLflow", "SageMaker", "Vertex AI"] },
      { name: "Infrastructure as Code", level: 85, tools: ["Terraform", "CloudFormation"] }
    ]
  },
  {
    name: "DevOps & System Design",
    skills: [
      { name: "Containerization", level: 90, tools: ["Docker", "Kubernetes", "Helm"] },
      { name: "Monitoring", level: 87, tools: ["Prometheus", "Grafana", "ELK Stack"] },
      { name: "Microservices", level: 85, tools: ["Service Mesh", "API Gateway"] }
    ]
  }
];

// Enhanced services data
const services = [
  {
    title: 'AI Solutions',
    description: 'Custom AI models, MLOps, and production deployment',
    icon: 'ü§ñ',
    features: ['Model Development', 'MLOps Pipeline', 'Production Deployment']
  },
  {
    title: 'Data Engineering',
    description: 'Scalable data pipelines and ETL processes',
    icon: 'üìä',
    features: ['ETL Design', 'Data Modeling', 'Stream Processing']
  },
  {
    title: 'Cloud Architecture',
    description: 'Cloud-native solutions and infrastructure design',
    icon: '‚òÅÔ∏è',
    features: ['Cloud Migration', 'Infrastructure Design', 'Cost Optimization']
  },
  {
    title: 'Technical Consulting',
    description: 'Expert guidance on technology decisions',
    icon: 'üí°',
    features: ['Architecture Review', 'Tech Strategy', 'Performance Optimization']
  }
];

// Enhanced testimonials
const testimonials = [
  {
    quote: "Transformed our data infrastructure with cutting-edge solutions that scaled our operations 10x.",
    author: "Sarah Chen",
    role: "CTO, TechCorp",
    image: "/images/testimonials/sarah.jpg"
  },
  {
    quote: "Exceptional expertise in AI implementation that delivered measurable business impact.",
    author: "Michael Rodriguez",
    role: "Lead Data Scientist",
    image: "/images/testimonials/michael.jpg"
  },
  {
    quote: "Delivered scalable solutions that exceeded our expectations and transformed our tech stack.",
    author: "Emily Thompson",
    role: "Engineering Director",
    image: "/images/testimonials/emily.jpg"
  }
];

// Recent work with enhanced metadata
const recentWork = [
  {
    title: "Data Flow Patterns in Distributed Systems",
    tags: ["architecture", "streaming"],
    date: "2024-03-15",
    excerpt: "Exploring efficient data flow patterns for distributed systems at scale."
  },
  {
    title: "Building Agentic AI Orchestrations with AutoGen",
    tags: ["agentic", "orchestration"],
    date: "2024-03-10",
    excerpt: "A comprehensive guide to building intelligent agent systems."
  },
  {
    title: "Implementing LLM-Based RAG Systems",
    tags: ["LLM", "RAG"],
    date: "2024-03-05",
    excerpt: "Step-by-step implementation of Retrieval-Augmented Generation systems."
  },
  {
    title: "Designing Scalable ETL Pipelines with Apache Beam",
    tags: ["ETL", "data-engineering"],
    date: "2024-03-01",
    excerpt: "Best practices for building production-grade ETL pipelines."
  },
  {
    title: "Vector Database Performance Benchmarking",
    tags: ["databases", "benchmarking"],
    date: "2024-02-25",
    excerpt: "Comprehensive analysis of vector database performance metrics."
  }
];
---

<Layout title="Home">
  <!-- Hero Section with Welcome Banner -->
  <section class="relative min-h-screen bg-gradient-to-br from-primary-900 via-primary-800 to-primary-900 text-white overflow-hidden">
    <div class="absolute inset-0 bg-grid-white/[0.05] bg-[size:60px_60px]"></div>
    <div class="absolute inset-0 bg-gradient-to-b from-transparent to-primary-900/90"></div>
    
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24 sm:py-32">
      <div class="text-center">
        <h1 class="text-5xl sm:text-6xl font-bold mb-6 animate-fade-in">
          Bridging AI Innovation with
          <span class="text-transparent bg-clip-text bg-gradient-to-r from-accent-400 to-accent-600">
            Engineering Excellence
          </span>
        </h1>
        <p class="text-xl sm:text-2xl text-gray-300 mb-8 max-w-3xl mx-auto animate-fade-in-delay">
          Transforming complex technical challenges into elegant solutions through code-first tutorials and deep-dive case studies.
        </p>
        <div class="flex flex-wrap justify-center gap-4 animate-fade-in-delay-2">
          <a href="/tutorials" class="btn btn-primary px-8 py-4 text-lg hover:scale-105 transition-transform">
            Explore Tutorials
          </a>
          <a href="/case-studies" class="btn btn-outline px-8 py-4 text-lg hover:scale-105 transition-transform">
            View Case Studies
          </a>
        </div>
      </div>
    </div>
  </section>

  <!-- About Me Section -->
  <section class="py-20 bg-white dark:bg-primary-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="grid lg:grid-cols-2 gap-12 items-center">
        <div class="space-y-6">
          <h2 class="text-4xl font-bold text-gray-900 dark:text-white">About Me</h2>
          <p class="text-xl text-gray-600 dark:text-gray-300">
            I'm a passionate technologist focused on bridging the gap between cutting-edge AI and robust data engineering. With expertise in building scalable systems and implementing AI solutions, I help organizations transform their technical challenges into opportunities for innovation.
          </p>
          <div class="flex gap-4">
            <a href="/about" class="btn btn-primary">Learn More</a>
            <a href="/contact" class="btn btn-outline">Get in Touch</a>
            <a href="https://github.com/yourusername" class="btn btn-outline" target="_blank" rel="noopener noreferrer">
              <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24"><path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/></svg>
              GitHub
            </a>
          </div>
        </div>
        <div class="relative">
          <div class="aspect-w-4 aspect-h-3 rounded-2xl overflow-hidden">
            <img src="/images/profile.jpg" alt="Profile" class="object-cover w-full h-full" />
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Enhanced Technical Expertise Section -->
  <section class="py-20 bg-gray-50 dark:bg-primary-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-4xl font-bold text-center mb-12 text-gray-900 dark:text-white">Technical Expertise</h2>
      
      <!-- Category Filter -->
      <div class="flex justify-center mb-8">
        <div class="inline-flex rounded-lg border border-gray-200 dark:border-primary-700 p-1">
          <button class="px-4 py-2 rounded-md bg-accent-600 text-white" data-filter="all">All</button>
          <button class="px-4 py-2 rounded-md text-gray-600 dark:text-gray-300" data-filter="ai">AI/LLM</button>
          <button class="px-4 py-2 rounded-md text-gray-600 dark:text-gray-300" data-filter="data">Data/Infra</button>
        </div>
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {skillCategories.map(category => (
          <div class="bg-white dark:bg-primary-900 rounded-xl p-6 shadow-sm hover:shadow-md transition-shadow">
            <h3 class="text-xl font-semibold mb-4 text-gray-900 dark:text-white">{category.name}</h3>
            <div class="space-y-4">
              {category.skills.map(skill => (
                <div class="group relative">
                  <div class="flex items-center justify-between mb-2">
                    <span class="text-gray-700 dark:text-gray-300">{skill.name}</span>
                    <span class="text-sm text-gray-500 dark:text-gray-400">{skill.level}%</span>
                  </div>
                  <div class="w-full bg-gray-200 dark:bg-primary-700 rounded-full h-2">
                    <div 
                      class="bg-gradient-to-r from-accent-500 to-accent-600 h-2 rounded-full transition-all duration-1000"
                      style={`width: ${skill.level}%`}
                    ></div>
                  </div>
                  <div class="absolute bottom-full left-0 mb-2 hidden group-hover:block bg-white dark:bg-primary-800 p-2 rounded shadow-lg">
                    <div class="text-sm text-gray-600 dark:text-gray-300">
                      {skill.tools.join(' ‚Ä¢ ')}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Enhanced Featured Projects -->
  <section class="py-20 bg-white dark:bg-primary-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-4xl font-bold text-center mb-12 text-gray-900 dark:text-white">Featured Projects</h2>
      <div class="grid md:grid-cols-2 gap-8">
        {featuredPosts.map(post => (
          <div class="group relative bg-white dark:bg-primary-800 rounded-xl overflow-hidden shadow-sm hover:shadow-xl transition-all duration-300">
            <div class="aspect-w-16 aspect-h-9">
              <img 
                src={post.data.heroImage} 
                alt={post.data.title}
                class="object-cover w-full h-full transform group-hover:scale-105 transition-transform duration-300"
              />
            </div>
            <div class="p-6">
              <h3 class="text-xl font-semibold mb-2 text-gray-900 dark:text-white">{post.data.title}</h3>
              <p class="text-gray-600 dark:text-gray-300 mb-4">{post.data.description}</p>
              <div class="flex items-center justify-between">
                <a href={`/${post.category}/${post.slug}`} class="text-accent-600 hover:text-accent-500 font-medium">
                  Read More ‚Üí
                </a>
                <div class="flex gap-2">
                  {post.data.tags.map(tag => (
                    <span class="px-2 py-1 text-sm bg-gray-100 dark:bg-primary-700 rounded-full text-gray-600 dark:text-gray-300">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Enhanced Services Section -->
  <section class="py-20 bg-gray-50 dark:bg-primary-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-4xl font-bold text-center mb-12 text-gray-900 dark:text-white">Services Offered</h2>
      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
        {services.map(service => (
          <div class="bg-white dark:bg-primary-900 rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-300">
            <span class="text-4xl mb-4 block">{service.icon}</span>
            <h3 class="text-xl font-semibold mb-2 text-gray-900 dark:text-white">{service.title}</h3>
            <p class="text-gray-600 dark:text-gray-300 mb-4">{service.description}</p>
            <ul class="space-y-2">
              {service.features.map(feature => (
                <li class="flex items-center text-gray-600 dark:text-gray-300">
                  <svg class="w-4 h-4 mr-2 text-accent-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                  </svg>
                  {feature}
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Enhanced Testimonials -->
  <section class="py-20 bg-white dark:bg-primary-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <h2 class="text-4xl font-bold text-center mb-12 text-gray-900 dark:text-white">What Clients Say</h2>
      <div class="grid md:grid-cols-3 gap-8">
        {testimonials.map(testimonial => (
          <div class="bg-gray-50 dark:bg-primary-800 rounded-xl p-6 shadow-sm">
            <div class="flex items-center mb-4">
              <img 
                src={testimonial.image} 
                alt={testimonial.author}
                class="w-12 h-12 rounded-full mr-4"
              />
              <div>
                <p class="font-semibold text-gray-900 dark:text-white">{testimonial.author}</p>
                <p class="text-gray-500 dark:text-gray-400">{testimonial.role}</p>
              </div>
            </div>
            <p class="text-gray-600 dark:text-gray-300">"{testimonial.quote}"</p>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- Enhanced Recent Work -->
  <section class="py-20 bg-gray-50 dark:bg-primary-800">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-center mb-8">
        <h2 class="text-4xl font-bold text-gray-900 dark:text-white">Recent Work</h2>
        <div class="flex gap-4">
          <input 
            type="text" 
            placeholder="Search articles..." 
            class="px-4 py-2 rounded-lg border border-gray-300 dark:border-primary-700 bg-white dark:bg-primary-900"
          />
          <select class="px-4 py-2 rounded-lg border border-gray-300 dark:border-primary-700 bg-white dark:bg-primary-900">
            <option value="recent">Most Recent</option>
            <option value="popular">Most Popular</option>
          </select>
        </div>
      </div>
      
      <div class="space-y-4">
        {recentWork.map(work => (
          <div class="group bg-white dark:bg-primary-900 rounded-lg p-4 hover:shadow-md transition-all duration-300">
            <div class="flex justify-between items-start">
              <div>
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">
                  {work.title}
                </h3>
                <p class="text-gray-600 dark:text-gray-300 text-sm mb-2">
                  {work.excerpt}
                </p>
                <div class="flex gap-2">
                  {work.tags.map(tag => (
                    <span class="px-2 py-1 text-sm bg-gray-100 dark:bg-primary-700 rounded-full text-gray-600 dark:text-gray-300">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>
              <span class="text-sm text-gray-500 dark:text-gray-400">
                {new Date(work.date).toLocaleDateString()}
              </span>
            </div>
          </div>
        ))}
      </div>
      
      <div class="mt-8 text-center">
        <a href="/blog" class="btn btn-primary px-8 py-3">View All Articles</a>
      </div>
    </div>
  </section>

  <!-- Enhanced Contact Form -->
  <section class="py-20 bg-white dark:bg-primary-900">
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-12">
        <h2 class="text-4xl font-bold text-gray-900 dark:text-white">Get in Touch</h2>
        <p class="text-xl text-gray-600 dark:text-gray-300 mt-4">
          Have a question or want to work together? I'd love to hear from you.
        </p>
      </div>
      
      <form class="space-y-6">
        <div class="grid md:grid-cols-2 gap-6">
          <div>
            <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Name</label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-accent-500 focus:ring-accent-500 dark:bg-primary-800 dark:border-primary-700"
              required
            />
          </div>
          <div>
            <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Email</label>
            <input 
              type="email" 
              id="email" 
              name="email" 
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-accent-500 focus:ring-accent-500 dark:bg-primary-800 dark:border-primary-700"
              required
            />
          </div>
        </div>
        <div>
          <label for="subject" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Subject</label>
          <input 
            type="text" 
            id="subject" 
            name="subject" 
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-accent-500 focus:ring-accent-500 dark:bg-primary-800 dark:border-primary-700"
            required
          />
        </div>
        <div>
          <label for="message" class="block text-sm font-medium text-gray-700 dark:text-gray-300">Message</label>
          <textarea 
            id="message" 
            name="message" 
            rows="4" 
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-accent-500 focus:ring-accent-500 dark:bg-primary-800 dark:border-primary-700"
            required
          ></textarea>
        </div>
        <div class="text-center">
          <button type="submit" class="btn btn-primary px-8 py-3">Send Message</button>
        </div>
      </form>
    </div>
  </section>

  <!-- Enhanced Newsletter Section -->
  <section class="py-20 bg-gradient-to-br from-accent-600 to-accent-800 text-white">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h2 class="text-4xl font-bold mb-4">Stay Updated</h2>
      <p class="text-xl max-w-3xl mx-auto mb-8">
        Subscribe to my newsletter for the latest insights on AI, data engineering, and technical tutorials.
      </p>
      <div class="max-w-2xl mx-auto">
        <Newsletter />
        <div class="mt-4 flex flex-wrap justify-center gap-4">
          <label class="inline-flex items-center">
            <input type="checkbox" class="form-checkbox" checked>
            <span class="ml-2">GenAI & Data Engineering</span>
          </label>
          <label class="inline-flex items-center">
            <input type="checkbox" class="form-checkbox" checked>
            <span class="ml-2">Data Engineering</span>
          </label>
          <label class="inline-flex items-center">
            <input type="checkbox" class="form-checkbox" checked>
            <span class="ml-2">AI/ML</span>
          </label>
        </div>
      </div>
    </div>
  </section>
</Layout>

<style>
  /* Animations */
  @keyframes fade-in {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .animate-fade-in {
    animation: fade-in 1s ease-out;
  }

  .animate-fade-in-delay {
    animation: fade-in 1s ease-out 0.2s both;
  }

  .animate-fade-in-delay-2 {
    animation: fade-in 1s ease-out 0.4s both;
  }

  /* Grid Background */
  .bg-grid-white {
    background-image: linear-gradient(to right, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
                      linear-gradient(to bottom, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  }

  /* Button Styles */
  .btn {
    @apply inline-flex items-center justify-center rounded-lg font-medium transition-all duration-200;
  }

  .btn-primary {
    @apply bg-accent-600 text-white hover:bg-accent-700 focus:ring-2 focus:ring-accent-500 focus:ring-offset-2;
  }

  .btn-outline {
    @apply border-2 border-white text-white hover:bg-white/10 focus:ring-2 focus:ring-white focus:ring-offset-2;
  }

  /* Card Hover Effects */
  .group:hover .group-hover\:scale-105 {
    transform: scale(1.05);
  }

  /* Form Styles */
  .form-checkbox {
    @apply rounded border-gray-300 text-accent-600 focus:ring-accent-500;
  }

  /* Responsive Design */
  @media (max-width: 640px) {
    .text-5xl {
      font-size: 2.5rem;
    }
    .text-6xl {
      font-size: 3rem;
    }
  }
</style>

<script>
  // Intersection Observer for scroll animations
  document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in');
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1
    });

    document.querySelectorAll('section').forEach(section => {
      observer.observe(section);
    });

    // Skill category filtering
    const filterButtons = document.querySelectorAll('[data-filter]');
    const skillCategories = document.querySelectorAll('.skill-category');

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const filter = button.dataset.filter;
        
        // Update active button
        filterButtons.forEach(btn => {
          btn.classList.remove('bg-accent-600', 'text-white');
          btn.classList.add('text-gray-600', 'dark:text-gray-300');
        });
        button.classList.add('bg-accent-600', 'text-white');
        button.classList.remove('text-gray-600', 'dark:text-gray-300');

        // Filter categories
        skillCategories.forEach(category => {
          if (filter === 'all' || category.dataset.category === filter) {
            category.style.display = 'block';
          } else {
            category.style.display = 'none';
          }
        });
      });
    });

    // Recent work search and filter
    const searchInput = document.querySelector('input[type="text"]');
    const workItems = document.querySelectorAll('.work-item');
    const sortSelect = document.querySelector('select');

    searchInput.addEventListener('input', (e) => {
      const searchTerm = e.target.value.toLowerCase();
      workItems.forEach(item => {
        const title = item.querySelector('h3').textContent.toLowerCase();
        const tags = Array.from(item.querySelectorAll('.tag')).map(tag => tag.textContent.toLowerCase());
        const shouldShow = title.includes(searchTerm) || tags.some(tag => tag.includes(searchTerm));
        item.style.display = shouldShow ? 'block' : 'none';
      });
    });

    sortSelect.addEventListener('change', (e) => {
      const sortBy = e.target.value;
      const items = Array.from(workItems);
      
      items.sort((a, b) => {
        if (sortBy === 'recent') {
          return new Date(b.dataset.date) - new Date(a.dataset.date);
        } else {
          return parseInt(b.dataset.views) - parseInt(a.dataset.views);
        }
      });

      const container = workItems[0].parentNode;
      items.forEach(item => container.appendChild(item));
    });
  });

  // Smooth scroll for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      document.querySelector(this.getAttribute('href')).scrollIntoView({
        behavior: 'smooth'
      });
    });
  });
</script>
